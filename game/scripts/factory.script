--[[
Этот файл — часть Darkbox.

Darkbox — свободная программа: вы можете перераспространять ее и/или
изменять ее на условиях Стандартной общественной лицензии GNU в том
виде, в каком она была опубликована Фондом свободного программного
обеспечения; либо версии 3 лицензии, либо (по вашему выбору) любой
более поздней версии.

Darkbox распространяется в надежде, что она будет полезной, но БЕЗО
ВСЯКИХ ГАРАНТИЙ; даже без неявной гарантии ТОВАРНОГО ВИДА или
ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННЫХ ЦЕЛЕЙ. Подробнее см. в Стандартной
общественной лицензии GNU.

Вы должны были получить копию Стандартной общественной лицензии GNU
вместе с этой программой. Если это не так, см.
<https://www.gnu.org/licenses/>.
]]

local ID = {
	ARROW = hash("/arrow")
}

local MSG = {
	ADD = hash("add"),
	TOGGLE = hash("toggle"),
}

local FACTORY = {
	PAYPHONE = msg.url("game:/factory#payphone")
}

local payphones = {}

function on_message(self, message_id, message, sender)
	if message_id == MSG.ADD then
		local TYPE = message.type
		if TYPE == "payphone" then
			payphones[#payphones+1] = collectionfactory.create(FACTORY.PAYPHONE, message.position)
			go.animate(payphones[#payphones][ID.ARROW], "position.y", go.PLAYBACK_LOOP_PINGPONG, -15, go.EASING_INOUTSINE, 2)
			--pprint(payphones)
		else
			error("unknown type: " .. TYPE, 2)
		end
	elseif message_id == MSG.TOGGLE then
		for n, pair in ipairs(message) do
			local TYPE, OBJ_ID, MODE = pair[1], pair[2], pair[3]

			if MODE == true then
				MODE = "enable"
			elseif MODE == false then
				MODE = "disable"
			else
				error(string.format("pair %d: illegal mode", n), 2)
			end

			local err = function ()
				error(string.format("unable to fetch object of type '%s' with id %d (in pair %d)", TYPE, OBJ_ID, n), 2)
			end
			
			if TYPE == "payphone" then
				msg.post(assert(payphones[OBJ_ID], err)[ID.ARROW], MODE)
			else
				error(string.format("pair %d: illegal object type '%s'", n, TYPE), 2)
			end
		end
	end
end