--[[
Этот файл — часть Darkbox.

Darkbox — свободная программа: вы можете перераспространять ее и/или
изменять ее на условиях Стандартной общественной лицензии GNU в том
виде, в каком она была опубликована Фондом свободного программного
обеспечения; либо версии 3 лицензии, либо (по вашему выбору) любой
более поздней версии.

Darkbox распространяется в надежде, что она будет полезной, но БЕЗО
ВСЯКИХ ГАРАНТИЙ; даже без неявной гарантии ТОВАРНОГО ВИДА или
ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННЫХ ЦЕЛЕЙ. Подробнее см. в Стандартной
общественной лицензии GNU.

Вы должны были получить копию Стандартной общественной лицензии GNU
вместе с этой программой. Если это не так, см.
<https://www.gnu.org/licenses/>.
]]

local MSG = {
	ACTIVATE_MISSION = hash("activate_mission")
}

------------------------------------------------------------------------

local mkit = require("lib.mkit")
local locale = require("lib.locale")

function init(self)
	self.locale = locale.get_page("game")
	
	self.on_start_script = mkit.make(
		function (env)
			mkit.add_speech({
				self.locale[1]
			})
		end
		-- function (env)
		-- 	print("mission frame")
		-- end
	)
	
	self.scripts = {
		mkit.make(
			function (env)
				-- title
				mkit.interrupt_speech({
					self.locale[2],
					self.locale[3],
				})
			end
			-- function (env)
			-- end
		)
	}

	self.ignore_fn_update = false
	self.progress = 0

	self.get_fn_init = function ()
		return self.scripts[self.active].fn_init
	end
	
	self.get_fn_update = function ()
		return self.scripts[self.active].fn_update
	end

	self.pcall = function (func)
		xpcall(func, function (msg)
			error("mission script error: " .. msg, 0)
			-- cancel mission
		end)
	end
end

function update(self, dt)
	if self.active ~= nil and not self.ignore_fn_update then
		local fn_update = self.get_fn_update()
		if fn_update then
			self.pcall(fn_update)
		else
			self.ignore_fn_update = true
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == MSG.ACTIVATE_MISSION then
		if self.scripts[self.progress+1] ~= nil then
			self.ignore_fn_update = false
			self.progress = self.progress + 1
			self.active = self.progress
			self.pcall(assert(self.get_fn_init(), "undeclared init function"))
		end
	end
end